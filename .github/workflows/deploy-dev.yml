name: Deploy FE to EC2 - Development

on:
  push:
    branches:
      - 'release/dev/**'      

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deployment version
        run: |
          echo "Deploying version: ${{ github.sha }}"
          
      - name: Set Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Deploy code to Amazon EC2 instance
        env:
          CONTAINER: "FE-DEV-CONTAINER"
          IMAGE: "${{ vars.APP_NAME }}-${{ steps.vars.outputs.sha_short }}:latest"
          APP: ${{ vars.APP_NAME }}
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.AWS_EC2_HOST  }}
          USER_NAME : ${{ secrets.AWS_EC2_USER  }}
          BASE_URL: ${{ vars.BASE_URL  }}
        run: |
          echo "Deploying image: $IMAGE"
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          # Copy environment variables to remote repo
          env | grep -E 'CONTAINER|IMAGE|APP|BASE_URL' > .env
          scp -o StrictHostKeyChecking=no -i private_key .env ${USER_NAME}@${HOSTNAME}:
          # Copy code to remote repo
          scp -o StrictHostKeyChecking=no -i private_key -r ${{ vars.APP_NAME }} ${USER_NAME}@${HOSTNAME}:
          # Connect to EC2 instance via SSH and run Docker commands          
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd $APP
            cp ../.env .
            source .env
            docker stop $CONTAINER || true
            docker rm $CONTAINER || true
            docker build -t $IMAGE .
            docker run -d -p 80:80 --name $CONTAINER --env-file .env $IMAGE
          '